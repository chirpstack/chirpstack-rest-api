{
  "swagger": "2.0",
  "info": {
    "title": "api/device_profile.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DeviceProfileService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/device-profiles": {
      "get": {
        "summary": "List the available device-profiles.",
        "operationId": "DeviceProfileService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListDeviceProfilesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of device-profiles to return in the result-set.\nIf not set, it will be treated as 0, and the response will only return the total_count.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "search",
            "description": "If set, the given string will be used to search on name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenantId",
            "description": "Tenant ID to list the device-profiles for.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceProfileService"
        ]
      },
      "post": {
        "summary": "Create the given device-profile.",
        "operationId": "DeviceProfileService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateDeviceProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateDeviceProfileRequest"
            }
          }
        ],
        "tags": [
          "DeviceProfileService"
        ]
      }
    },
    "/api/device-profiles/adr-algorithms": {
      "get": {
        "summary": "List available ADR algorithms.",
        "operationId": "DeviceProfileService_ListAdrAlgorithms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListDeviceProfileAdrAlgorithmsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DeviceProfileService"
        ]
      }
    },
    "/api/device-profiles/{deviceProfile.id}": {
      "put": {
        "summary": "Update the given device-profile.",
        "operationId": "DeviceProfileService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deviceProfile.id",
            "description": "Device-profile ID (UUID).\nNote: on create this will be automatically generated.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deviceProfile": {
                  "type": "object",
                  "properties": {
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant ID (UUID)."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description."
                    },
                    "region": {
                      "$ref": "#/definitions/commonRegion",
                      "description": "Region."
                    },
                    "macVersion": {
                      "$ref": "#/definitions/commonMacVersion",
                      "description": "LoRaWAN mac-version."
                    },
                    "regParamsRevision": {
                      "$ref": "#/definitions/commonRegParamsRevision",
                      "description": "Regional parameters revision."
                    },
                    "adrAlgorithmId": {
                      "type": "string",
                      "description": "ADR algorithm ID."
                    },
                    "payloadCodecRuntime": {
                      "$ref": "#/definitions/apiCodecRuntime",
                      "description": "Payload codec runtime."
                    },
                    "payloadCodecScript": {
                      "type": "string",
                      "description": "Payload codec script."
                    },
                    "flushQueueOnActivate": {
                      "type": "boolean",
                      "description": "Flush queue on device activation."
                    },
                    "uplinkInterval": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Uplink interval (seconds).\nThis defines the expected uplink interval which the device uses for\ncommunication. If the uplink interval has expired and no uplink has\nbeen received, the device is considered inactive."
                    },
                    "deviceStatusReqInterval": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Device-status request interval (times / day).\nThis defines the times per day that ChirpStack will request the\ndevice-status from the device."
                    },
                    "supportsOtaa": {
                      "type": "boolean",
                      "description": "Supports OTAA."
                    },
                    "supportsClassB": {
                      "type": "boolean",
                      "description": "Supports Class B."
                    },
                    "supportsClassC": {
                      "type": "boolean",
                      "description": "Supports Class-C."
                    },
                    "classBTimeout": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Class-B timeout (seconds).\nThis is the maximum time ChirpStack will wait to receive an acknowledgement\nfrom the device (if requested)."
                    },
                    "classBPingSlotPeriodicity": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Class-B ping-slot periodicity.\nValid options are: 0 - 7.\n\nNumber of ping-slots per beacon-period:\npingNb = 2^(7-periodicity)\n\nPeriodicity: 0 = 128 ping-slots per beacon period = ~ every 1 sec\nPeriodicity: 7 = 1 ping-slot per beacon period = ~ every 128 sec"
                    },
                    "classBPingSlotDr": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Class-B ping-slot DR."
                    },
                    "classBPingSlotFreq": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Class-B ping-slot freq (Hz)."
                    },
                    "classCTimeout": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Class-C timeout (seconds).\nThis is the maximum time ChirpStack will wait to receive an acknowledgement\nfrom the device (if requested)."
                    },
                    "abpRx1Delay": {
                      "type": "integer",
                      "format": "int64",
                      "description": "RX1 delay (for ABP)."
                    },
                    "abpRx1DrOffset": {
                      "type": "integer",
                      "format": "int64",
                      "description": "RX1 DR offset (for ABP)."
                    },
                    "abpRx2Dr": {
                      "type": "integer",
                      "format": "int64",
                      "description": "RX2 DR (for ABP)."
                    },
                    "abpRx2Freq": {
                      "type": "integer",
                      "format": "int64",
                      "description": "RX2 frequency (for ABP, Hz)."
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Tags (user defined).\nThese tags can be used to add additional information the the\ndevice-profile. These tags are exposed in all the integration events of\ndevices using this device-profile."
                    },
                    "measurements": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/definitions/apiMeasurement"
                      },
                      "description": "Measurements.\nIf defined, ChirpStack will visualize these metrics in the web-interface."
                    },
                    "autoDetectMeasurements": {
                      "type": "boolean",
                      "description": "Auto-detect measurements.\nIf set to true, measurements will be automatically added based on the\nkeys of the decoded payload. In cases where the decoded payload contains\nrandom keys in the data, you want to set this to false."
                    },
                    "regionConfigId": {
                      "type": "string",
                      "description": "Region configuration ID.\nIf set, devices will only use the associated region. If let blank, then\ndevices will use all regions matching the selected common-name. Note\nthat multiple region configurations can exist for the same common-name,\ne.g. to provide an 8 channel and 16 channel configuration for the US915\nband."
                    },
                    "isRelay": {
                      "type": "boolean",
                      "description": "Device is a Relay device.\nEnable this in case the device is a Relay. A Relay device implements TS011\nand is able to relay data from relay capable devices.\nSee for more information the TS011 specification."
                    },
                    "isRelayEd": {
                      "type": "boolean",
                      "description": "Device is a Relay end-device.\nEnable this in case the device is an end-device that can operate under a\nRelay. Please refer to the TS011 specification for more information."
                    },
                    "relayEdRelayOnly": {
                      "type": "boolean",
                      "description": "End-device only accept data through relay.\nOnly accept data for this device through a relay. This setting is useful\nfor testing as in case of a test-setup, the end-device is usually within\nrange of the gateway."
                    },
                    "relayEnabled": {
                      "type": "boolean",
                      "description": "Relay must be enabled."
                    },
                    "relayCadPeriodicity": {
                      "$ref": "#/definitions/apiCadPeriodicity",
                      "description": "Relay CAD periodicity."
                    },
                    "relayDefaultChannelIndex": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay default channel index.\nValid values are 0 and 1, please refer to the RP002 specification for\nthe meaning of these values."
                    },
                    "relaySecondChannelFreq": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay second channel frequency (Hz)."
                    },
                    "relaySecondChannelDr": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay second channel DR."
                    },
                    "relaySecondChannelAckOffset": {
                      "$ref": "#/definitions/apiSecondChAckOffset",
                      "description": "Relay second channel ACK offset."
                    },
                    "relayEdActivationMode": {
                      "$ref": "#/definitions/apiRelayModeActivation",
                      "description": "Relay end-device activation mode."
                    },
                    "relayEdSmartEnableLevel": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay end-device smart-enable level."
                    },
                    "relayEdBackOff": {
                      "type": "integer",
                      "format": "int64",
                      "title": "Relay end-device back-off (in case it does not receive WOR ACK frame).\n0 = Always send a LoRaWAN uplink\n1..63 = Send a LoRaWAN uplink after X WOR frames without a WOR ACK"
                    },
                    "relayEdUplinkLimitBucketSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay end-device uplink limit bucket size.\n\nThis field indicates the multiplier to determine the bucket size\naccording to the following formula:\nBucketSize TOKEN = _reload_rate x _bucket_size\n\nValid values (0 - 3):\n  0 = 1\n  1 = 2\n  2 = 4\n  3 = 12"
                    },
                    "relayEdUplinkLimitReloadRate": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay end-device uplink limit reload rate.\n\nValid values:\n  * 0 - 62 = X tokens every hour\n  * 63     = no limitation"
                    },
                    "relayJoinReqLimitReloadRate": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay join-request limit reload rate.\n\nValid values:\n  * 0 - 126 = X tokens every hour\n  * 127     = no limitation"
                    },
                    "relayNotifyLimitReloadRate": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay notify limit reload rate.\n\nValid values:\n  * 0 - 126 = X tokens every hour\n  * 127     = no limitation"
                    },
                    "relayGlobalUplinkLimitReloadRate": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay global uplink limit reload rate.\n\nValid values:\n  * 0 - 126 = X tokens every hour\n  * 127     = no limitation"
                    },
                    "relayOverallLimitReloadRate": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay overall limit reload rate.\n\nValid values:\n  * 0 - 126 = X tokens every hour\n  * 127     = no limitation"
                    },
                    "relayJoinReqLimitBucketSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay join-request limit bucket size.\n\nThis field indicates the multiplier to determine the bucket size\naccording to the following formula:\nBucketSize TOKEN = _reload_rate x _bucket_size\n\nValid values (0 - 3):\n  0 = 1\n  1 = 2\n  2 = 4\n  3 = 12"
                    },
                    "relayNotifyLimitBucketSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay notify limit bucket size.\n\nThis field indicates the multiplier to determine the bucket size\naccording to the following formula:\nBucketSize TOKEN = _reload_rate x _bucket_size\n\nValid values (0 - 3):\n  0 = 1\n  1 = 2\n  2 = 4\n  3 = 12"
                    },
                    "relayGlobalUplinkLimitBucketSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay globak uplink limit bucket size.\n\nThis field indicates the multiplier to determine the bucket size\naccording to the following formula:\nBucketSize TOKEN = _reload_rate x _bucket_size\n\nValid values (0 - 3):\n  0 = 1\n  1 = 2\n  2 = 4\n  3 = 12"
                    },
                    "relayOverallLimitBucketSize": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Relay overall limit bucket size.\n\nThis field indicates the multiplier to determine the bucket size\naccording to the following formula:\nBucketSize TOKEN = _reload_rate x _bucket_size\n\nValid values (0 - 3):\n  0 = 1\n  1 = 2\n  2 = 4\n  3 = 12"
                    },
                    "allowRoaming": {
                      "type": "boolean",
                      "description": "Allow roaming.\n\nIf set to true, it means that the device is allowed to use roaming."
                    },
                    "rx1Delay": {
                      "type": "integer",
                      "format": "int64",
                      "description": "RX1 Delay.\n\nThis makes it possible to override the system RX1 Delay. Please note that\nthis values only has effect in case it is higher than the system value.\nIn other words, it can be used to increase the RX1 Delay but not to decrease\nit.\nValid options are 1 - 15 (0 = always use system RX1 Delay)."
                    },
                    "appLayerParams": {
                      "$ref": "#/definitions/apiAppLayerParams",
                      "description": "Application Layer parameters."
                    }
                  },
                  "description": "Device-profile object.",
                  "title": "Device-profile object."
                }
              }
            }
          }
        ],
        "tags": [
          "DeviceProfileService"
        ]
      }
    },
    "/api/device-profiles/{id}": {
      "get": {
        "summary": "Get the device-profile for the given ID.",
        "operationId": "DeviceProfileService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetDeviceProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceProfileService"
        ]
      },
      "delete": {
        "summary": "Delete the device-profile with the given ID.",
        "operationId": "DeviceProfileService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceProfileService"
        ]
      }
    }
  },
  "definitions": {
    "apiAdrAlgorithmListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Algorithm ID."
        },
        "name": {
          "type": "string",
          "description": "Algorithm name."
        }
      }
    },
    "apiAppLayerParams": {
      "type": "object",
      "properties": {
        "ts003Version": {
          "$ref": "#/definitions/apiTs003Version",
          "description": "TS003 version (Application Layer Clock Sync)."
        },
        "ts003FPort": {
          "type": "integer",
          "format": "int64",
          "description": "TS003 fPort."
        },
        "ts004Version": {
          "$ref": "#/definitions/apiTs004Version",
          "description": "TS004 version (Fragmented Data Block Transport)."
        },
        "ts004FPort": {
          "type": "integer",
          "format": "int64",
          "description": "TS004 fPort."
        },
        "ts005Version": {
          "$ref": "#/definitions/apiTs005Version",
          "description": "TS005 version (Remote Multicast Setup)."
        },
        "ts005FPort": {
          "type": "integer",
          "format": "int64",
          "description": "TS005 fPort."
        }
      }
    },
    "apiCadPeriodicity": {
      "type": "string",
      "enum": [
        "SEC_1",
        "MS_500",
        "MS_250",
        "MS_100",
        "MS_50",
        "MS_20"
      ],
      "default": "SEC_1",
      "title": "- SEC_1: 1 second.\n - MS_500: 500 milliseconds\n - MS_250: 250 milliseconds\n - MS_100: 100 milliseconds\n - MS_50: 50 milliseconds\n - MS_20: 20 milliseconds"
    },
    "apiCodecRuntime": {
      "type": "string",
      "enum": [
        "NONE",
        "CAYENNE_LPP",
        "JS"
      ],
      "default": "NONE",
      "description": " - NONE: None.\n - CAYENNE_LPP: Cayenne LPP.\n - JS: JavaScript."
    },
    "apiCreateDeviceProfileRequest": {
      "type": "object",
      "properties": {
        "deviceProfile": {
          "$ref": "#/definitions/apiDeviceProfile",
          "description": "Object to create."
        }
      }
    },
    "apiCreateDeviceProfileResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID (UUID)."
        }
      }
    },
    "apiDeviceProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Device-profile ID (UUID).\nNote: on create this will be automatically generated."
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant ID (UUID)."
        },
        "name": {
          "type": "string",
          "description": "Name."
        },
        "description": {
          "type": "string",
          "description": "Description."
        },
        "region": {
          "$ref": "#/definitions/commonRegion",
          "description": "Region."
        },
        "macVersion": {
          "$ref": "#/definitions/commonMacVersion",
          "description": "LoRaWAN mac-version."
        },
        "regParamsRevision": {
          "$ref": "#/definitions/commonRegParamsRevision",
          "description": "Regional parameters revision."
        },
        "adrAlgorithmId": {
          "type": "string",
          "description": "ADR algorithm ID."
        },
        "payloadCodecRuntime": {
          "$ref": "#/definitions/apiCodecRuntime",
          "description": "Payload codec runtime."
        },
        "payloadCodecScript": {
          "type": "string",
          "description": "Payload codec script."
        },
        "flushQueueOnActivate": {
          "type": "boolean",
          "description": "Flush queue on device activation."
        },
        "uplinkInterval": {
          "type": "integer",
          "format": "int64",
          "description": "Uplink interval (seconds).\nThis defines the expected uplink interval which the device uses for\ncommunication. If the uplink interval has expired and no uplink has\nbeen received, the device is considered inactive."
        },
        "deviceStatusReqInterval": {
          "type": "integer",
          "format": "int64",
          "description": "Device-status request interval (times / day).\nThis defines the times per day that ChirpStack will request the\ndevice-status from the device."
        },
        "supportsOtaa": {
          "type": "boolean",
          "description": "Supports OTAA."
        },
        "supportsClassB": {
          "type": "boolean",
          "description": "Supports Class B."
        },
        "supportsClassC": {
          "type": "boolean",
          "description": "Supports Class-C."
        },
        "classBTimeout": {
          "type": "integer",
          "format": "int64",
          "description": "Class-B timeout (seconds).\nThis is the maximum time ChirpStack will wait to receive an acknowledgement\nfrom the device (if requested)."
        },
        "classBPingSlotPeriodicity": {
          "type": "integer",
          "format": "int64",
          "description": "Class-B ping-slot periodicity.\nValid options are: 0 - 7.\n\nNumber of ping-slots per beacon-period:\npingNb = 2^(7-periodicity)\n\nPeriodicity: 0 = 128 ping-slots per beacon period = ~ every 1 sec\nPeriodicity: 7 = 1 ping-slot per beacon period = ~ every 128 sec"
        },
        "classBPingSlotDr": {
          "type": "integer",
          "format": "int64",
          "description": "Class-B ping-slot DR."
        },
        "classBPingSlotFreq": {
          "type": "integer",
          "format": "int64",
          "description": "Class-B ping-slot freq (Hz)."
        },
        "classCTimeout": {
          "type": "integer",
          "format": "int64",
          "description": "Class-C timeout (seconds).\nThis is the maximum time ChirpStack will wait to receive an acknowledgement\nfrom the device (if requested)."
        },
        "abpRx1Delay": {
          "type": "integer",
          "format": "int64",
          "description": "RX1 delay (for ABP)."
        },
        "abpRx1DrOffset": {
          "type": "integer",
          "format": "int64",
          "description": "RX1 DR offset (for ABP)."
        },
        "abpRx2Dr": {
          "type": "integer",
          "format": "int64",
          "description": "RX2 DR (for ABP)."
        },
        "abpRx2Freq": {
          "type": "integer",
          "format": "int64",
          "description": "RX2 frequency (for ABP, Hz)."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags (user defined).\nThese tags can be used to add additional information the the\ndevice-profile. These tags are exposed in all the integration events of\ndevices using this device-profile."
        },
        "measurements": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/apiMeasurement"
          },
          "description": "Measurements.\nIf defined, ChirpStack will visualize these metrics in the web-interface."
        },
        "autoDetectMeasurements": {
          "type": "boolean",
          "description": "Auto-detect measurements.\nIf set to true, measurements will be automatically added based on the\nkeys of the decoded payload. In cases where the decoded payload contains\nrandom keys in the data, you want to set this to false."
        },
        "regionConfigId": {
          "type": "string",
          "description": "Region configuration ID.\nIf set, devices will only use the associated region. If let blank, then\ndevices will use all regions matching the selected common-name. Note\nthat multiple region configurations can exist for the same common-name,\ne.g. to provide an 8 channel and 16 channel configuration for the US915\nband."
        },
        "isRelay": {
          "type": "boolean",
          "description": "Device is a Relay device.\nEnable this in case the device is a Relay. A Relay device implements TS011\nand is able to relay data from relay capable devices.\nSee for more information the TS011 specification."
        },
        "isRelayEd": {
          "type": "boolean",
          "description": "Device is a Relay end-device.\nEnable this in case the device is an end-device that can operate under a\nRelay. Please refer to the TS011 specification for more information."
        },
        "relayEdRelayOnly": {
          "type": "boolean",
          "description": "End-device only accept data through relay.\nOnly accept data for this device through a relay. This setting is useful\nfor testing as in case of a test-setup, the end-device is usually within\nrange of the gateway."
        },
        "relayEnabled": {
          "type": "boolean",
          "description": "Relay must be enabled."
        },
        "relayCadPeriodicity": {
          "$ref": "#/definitions/apiCadPeriodicity",
          "description": "Relay CAD periodicity."
        },
        "relayDefaultChannelIndex": {
          "type": "integer",
          "format": "int64",
          "description": "Relay default channel index.\nValid values are 0 and 1, please refer to the RP002 specification for\nthe meaning of these values."
        },
        "relaySecondChannelFreq": {
          "type": "integer",
          "format": "int64",
          "description": "Relay second channel frequency (Hz)."
        },
        "relaySecondChannelDr": {
          "type": "integer",
          "format": "int64",
          "description": "Relay second channel DR."
        },
        "relaySecondChannelAckOffset": {
          "$ref": "#/definitions/apiSecondChAckOffset",
          "description": "Relay second channel ACK offset."
        },
        "relayEdActivationMode": {
          "$ref": "#/definitions/apiRelayModeActivation",
          "description": "Relay end-device activation mode."
        },
        "relayEdSmartEnableLevel": {
          "type": "integer",
          "format": "int64",
          "description": "Relay end-device smart-enable level."
        },
        "relayEdBackOff": {
          "type": "integer",
          "format": "int64",
          "title": "Relay end-device back-off (in case it does not receive WOR ACK frame).\n0 = Always send a LoRaWAN uplink\n1..63 = Send a LoRaWAN uplink after X WOR frames without a WOR ACK"
        },
        "relayEdUplinkLimitBucketSize": {
          "type": "integer",
          "format": "int64",
          "description": "Relay end-device uplink limit bucket size.\n\nThis field indicates the multiplier to determine the bucket size\naccording to the following formula:\nBucketSize TOKEN = _reload_rate x _bucket_size\n\nValid values (0 - 3):\n  0 = 1\n  1 = 2\n  2 = 4\n  3 = 12"
        },
        "relayEdUplinkLimitReloadRate": {
          "type": "integer",
          "format": "int64",
          "description": "Relay end-device uplink limit reload rate.\n\nValid values:\n  * 0 - 62 = X tokens every hour\n  * 63     = no limitation"
        },
        "relayJoinReqLimitReloadRate": {
          "type": "integer",
          "format": "int64",
          "description": "Relay join-request limit reload rate.\n\nValid values:\n  * 0 - 126 = X tokens every hour\n  * 127     = no limitation"
        },
        "relayNotifyLimitReloadRate": {
          "type": "integer",
          "format": "int64",
          "description": "Relay notify limit reload rate.\n\nValid values:\n  * 0 - 126 = X tokens every hour\n  * 127     = no limitation"
        },
        "relayGlobalUplinkLimitReloadRate": {
          "type": "integer",
          "format": "int64",
          "description": "Relay global uplink limit reload rate.\n\nValid values:\n  * 0 - 126 = X tokens every hour\n  * 127     = no limitation"
        },
        "relayOverallLimitReloadRate": {
          "type": "integer",
          "format": "int64",
          "description": "Relay overall limit reload rate.\n\nValid values:\n  * 0 - 126 = X tokens every hour\n  * 127     = no limitation"
        },
        "relayJoinReqLimitBucketSize": {
          "type": "integer",
          "format": "int64",
          "description": "Relay join-request limit bucket size.\n\nThis field indicates the multiplier to determine the bucket size\naccording to the following formula:\nBucketSize TOKEN = _reload_rate x _bucket_size\n\nValid values (0 - 3):\n  0 = 1\n  1 = 2\n  2 = 4\n  3 = 12"
        },
        "relayNotifyLimitBucketSize": {
          "type": "integer",
          "format": "int64",
          "description": "Relay notify limit bucket size.\n\nThis field indicates the multiplier to determine the bucket size\naccording to the following formula:\nBucketSize TOKEN = _reload_rate x _bucket_size\n\nValid values (0 - 3):\n  0 = 1\n  1 = 2\n  2 = 4\n  3 = 12"
        },
        "relayGlobalUplinkLimitBucketSize": {
          "type": "integer",
          "format": "int64",
          "description": "Relay globak uplink limit bucket size.\n\nThis field indicates the multiplier to determine the bucket size\naccording to the following formula:\nBucketSize TOKEN = _reload_rate x _bucket_size\n\nValid values (0 - 3):\n  0 = 1\n  1 = 2\n  2 = 4\n  3 = 12"
        },
        "relayOverallLimitBucketSize": {
          "type": "integer",
          "format": "int64",
          "description": "Relay overall limit bucket size.\n\nThis field indicates the multiplier to determine the bucket size\naccording to the following formula:\nBucketSize TOKEN = _reload_rate x _bucket_size\n\nValid values (0 - 3):\n  0 = 1\n  1 = 2\n  2 = 4\n  3 = 12"
        },
        "allowRoaming": {
          "type": "boolean",
          "description": "Allow roaming.\n\nIf set to true, it means that the device is allowed to use roaming."
        },
        "rx1Delay": {
          "type": "integer",
          "format": "int64",
          "description": "RX1 Delay.\n\nThis makes it possible to override the system RX1 Delay. Please note that\nthis values only has effect in case it is higher than the system value.\nIn other words, it can be used to increase the RX1 Delay but not to decrease\nit.\nValid options are 1 - 15 (0 = always use system RX1 Delay)."
        },
        "appLayerParams": {
          "$ref": "#/definitions/apiAppLayerParams",
          "description": "Application Layer parameters."
        }
      }
    },
    "apiDeviceProfileListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Device-profile ID (UUID)."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        },
        "name": {
          "type": "string",
          "description": "Name."
        },
        "region": {
          "$ref": "#/definitions/commonRegion",
          "description": "Region."
        },
        "macVersion": {
          "$ref": "#/definitions/commonMacVersion",
          "description": "LoRaWAN mac-version."
        },
        "regParamsRevision": {
          "$ref": "#/definitions/commonRegParamsRevision",
          "description": "Regional parameters revision."
        },
        "supportsOtaa": {
          "type": "boolean",
          "description": "Supports OTAA."
        },
        "supportsClassB": {
          "type": "boolean",
          "description": "Supports Class-B."
        },
        "supportsClassC": {
          "type": "boolean",
          "description": "Supports Class-C."
        }
      }
    },
    "apiGetDeviceProfileResponse": {
      "type": "object",
      "properties": {
        "deviceProfile": {
          "$ref": "#/definitions/apiDeviceProfile",
          "description": "Device-profile object."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "apiListDeviceProfileAdrAlgorithmsResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of algorithms."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiAdrAlgorithmListItem"
          },
          "description": "Result-set."
        }
      }
    },
    "apiListDeviceProfilesResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of device-profiles."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiDeviceProfileListItem"
          },
          "description": "Result-set."
        }
      }
    },
    "apiMeasurement": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name (user defined)."
        },
        "kind": {
          "$ref": "#/definitions/apiMeasurementKind",
          "description": "Kind."
        }
      }
    },
    "apiMeasurementKind": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "COUNTER",
        "ABSOLUTE",
        "GAUGE",
        "STRING"
      ],
      "default": "UNKNOWN",
      "description": " - UNKNOWN: Unknown (in which case it is not tracked).\n - COUNTER: Incrementing counters that never decrease (these are not reset on each\nreading).\n - ABSOLUTE: Counters that do get reset upon reading.\n - GAUGE: E.g. a temperature value.\n - STRING: E.g. a firmware version, true / false value."
    },
    "apiRelayModeActivation": {
      "type": "string",
      "enum": [
        "DISABLE_RELAY_MODE",
        "ENABLE_RELAY_MODE",
        "DYNAMIC",
        "END_DEVICE_CONTROLLED"
      ],
      "default": "DISABLE_RELAY_MODE",
      "description": " - DISABLE_RELAY_MODE: Disable the relay mode.\n - ENABLE_RELAY_MODE: Enable the relay model.\n - DYNAMIC: Dynamic.\n - END_DEVICE_CONTROLLED: End-device controlled."
    },
    "apiSecondChAckOffset": {
      "type": "string",
      "enum": [
        "KHZ_0",
        "KHZ_200",
        "KHZ_400",
        "KHZ_800",
        "KHZ_1600",
        "KHZ_3200"
      ],
      "default": "KHZ_0",
      "description": " - KHZ_0: 0 kHz.\n - KHZ_200: 200 kHz.\n - KHZ_400: 400 kHz.\n - KHZ_800: 800 kHz.\n - KHZ_1600: 1600 kHz.\n - KHZ_3200: 3200 kHz."
    },
    "apiTs003Version": {
      "type": "string",
      "enum": [
        "TS003_NOT_IMPLEMENTED",
        "TS003_V100",
        "TS003_v200"
      ],
      "default": "TS003_NOT_IMPLEMENTED",
      "title": "- TS003_NOT_IMPLEMENTED: Not implemented.\n - TS003_V100: v1.0.0.\n - TS003_v200: v2.0.0"
    },
    "apiTs004Version": {
      "type": "string",
      "enum": [
        "TS004_NOT_IMPLEMENTED",
        "TS004_V100",
        "TS004_V200"
      ],
      "default": "TS004_NOT_IMPLEMENTED",
      "title": "- TS004_NOT_IMPLEMENTED: Not implemented.\n - TS004_V100: v1.0.0.\n - TS004_V200: v2.0.0"
    },
    "apiTs005Version": {
      "type": "string",
      "enum": [
        "TS005_NOT_IMPLEMENTED",
        "TS005_V100",
        "TS005_V200"
      ],
      "default": "TS005_NOT_IMPLEMENTED",
      "title": "- TS005_NOT_IMPLEMENTED: Not implemented.\n - TS005_V100: v1.0.0.\n - TS005_V200: v2.0.0"
    },
    "commonMacVersion": {
      "type": "string",
      "enum": [
        "LORAWAN_1_0_0",
        "LORAWAN_1_0_1",
        "LORAWAN_1_0_2",
        "LORAWAN_1_0_3",
        "LORAWAN_1_0_4",
        "LORAWAN_1_1_0"
      ],
      "default": "LORAWAN_1_0_0"
    },
    "commonRegParamsRevision": {
      "type": "string",
      "enum": [
        "A",
        "B",
        "RP002_1_0_0",
        "RP002_1_0_1",
        "RP002_1_0_2",
        "RP002_1_0_3",
        "RP002_1_0_4"
      ],
      "default": "A"
    },
    "commonRegion": {
      "type": "string",
      "enum": [
        "EU868",
        "US915",
        "CN779",
        "EU433",
        "AU915",
        "CN470",
        "AS923",
        "AS923_2",
        "AS923_3",
        "AS923_4",
        "KR920",
        "IN865",
        "RU864",
        "ISM2400"
      ],
      "default": "EU868",
      "title": "- EU868: EU868\n - US915: US915\n - CN779: CN779\n - EU433: EU433\n - AU915: AU915\n - CN470: CN470\n - AS923: AS923\n - AS923_2: AS923 with -1.80 MHz frequency offset\n - AS923_3: AS923 with -6.60 MHz frequency offset\n - AS923_4: (AS923 with -5.90 MHz frequency offset).\n - KR920: KR920\n - IN865: IN865\n - RU864: RU864\n - ISM2400: ISM2400 (LoRaWAN 2.4 GHz)"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
